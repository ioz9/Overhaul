/*
 *  Copyright (c) 2012 Daniel Huckaby
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package com.handlerexploit.overhaul.adapters;

import java.util.List;

import android.content.Context;
import android.graphics.Bitmap;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ArrayAdapter;
import android.widget.ImageView;
import android.widget.TextView;

import com.handlerexploit.common.utils.ImageManager;
import com.handlerexploit.common.utils.ImageManager.OnImageRecievedListener;
import com.handlerexploit.overhaul.R;
import com.handlerexploit.overhaul.models.Recovery;
public class RecoveryAdapter extends ArrayAdapter<Recovery> {

    public RecoveryAdapter(Context context, List<Recovery> objects) {
        super(context, 0, objects);
    }
    
    @Override
    public View getView(int position, View convertView, ViewGroup parent) {
        
        ViewHolder holder;
        if (convertView == null) {
            convertView = LayoutInflater.from(getContext()).inflate(R.layout.item_recovery, null);
            
            holder = new ViewHolder();
            holder.title = (TextView) convertView.findViewById(R.id.title);
            holder.description = (TextView) convertView.findViewById(R.id.description);
            holder.icon = (ImageView) convertView.findViewById(R.id.icon);
            
            convertView.setTag(holder);
        } else {
            holder = (ViewHolder) convertView.getTag();
        }
        
        Recovery recovery = getItem(position);

        holder.title.setText(recovery.getTitle());
        holder.description.setText(recovery.getDescription());
        
        holder.icon.setImageResource(R.drawable.default_img);
        holder.thumbnailIconUrl = recovery.getThumbnailIconUrl();
        ImageManager.getInstance(getContext()).get(holder);
        
        return convertView;
    }
    
    private class ViewHolder implements OnImageRecievedListener {
        
        TextView title;
        TextView description;
        ImageView icon;
        String thumbnailIconUrl;
        
        @Override
        public void onImageReceived(String source, Bitmap bitmap) {
            if (source.equals(thumbnailIconUrl) && bitmap != null) {
                icon.setImageBitmap(bitmap);
            }
        }

        @Override
        public String getSource() {
            return thumbnailIconUrl;
        }
    }
}