/*
 *  Copyright (c) 2012 Daniel Huckaby
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package com.handlerexploit.recoveryflasher.activities;

import java.lang.reflect.Method;

import android.os.Bundle;
import android.support.v4.app.FragmentActivity;
import android.support.v4.view.ViewPager;
import android.util.Log;
import android.view.View;

import com.handlerexploit.recoveryflasher.R;
import com.handlerexploit.recoveryflasher.adapters.PagerAdapter;
import com.handlerexploit.recoveryflasher.fragments.DeviceFragment;
import com.handlerexploit.recoveryflasher.widgets.PagerHeader;

public class DevicesActivity extends FragmentActivity {
    
    private static final String TAG = DevicesActivity.class.getSimpleName();

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_devices);
        setupViews();
    }
    
    private void setupViews() {
        ViewPager viewPager = (ViewPager) findViewById(R.id.viewPager);
        PagerHeader pagerHeader = (PagerHeader) findViewById(R.id.pagerHeader);
        PagerAdapter pagerAdapter = new PagerAdapter(this, viewPager, pagerHeader);
        
        for (Device device : Device.values()) {
            Bundle bundle = new Bundle();
            bundle.putString(DeviceFragment.EXTRA_DEVICE, device.name());
            pagerAdapter.add(DeviceFragment.class, bundle, device.getName().toUpperCase());
        }

        disableOverscrollMode(viewPager);
    }
    
    public static void disableOverscrollMode(View view) {
        try {
            int OVER_SCROLL_NEVER = View.class.getField("OVER_SCROLL_NEVER").getInt(null);
            Method setOverScrollMode = View.class.getMethod("setOverScrollMode", new Class[] {Integer.TYPE});
            if (setOverScrollMode != null) {
                setOverScrollMode.invoke(view, OVER_SCROLL_NEVER);
            }
        } catch (Exception e) {
            Log.d(TAG, "Disabling overscroll failed", e);
        }
    }
    
    public static enum Device {
        CLIQ("Motorola Cliq", "http://dl.dropbox.com/u/788286/com.adlx.recoveryflasher/motorola.mb200.json"),
        CLIQXT("Motorola CliqXT", "http://dl.dropbox.com/u/788286/com.adlx.recoveryflasher/motorola.mb501.json");

        private String name;
        private String url;

        Device(String name, String url) {
            this.name = name;
            this.url = url;
        }

        public String getName() {
            return name;
        }

        public String getUrl() {
            return url;
        }
    }
}