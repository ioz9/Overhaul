/*
 *  Copyright (c) 2012 Daniel Huckaby
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package com.handlerexploit.recoveryflasher.activities;

import java.io.File;

import android.graphics.Bitmap;
import android.os.Bundle;
import android.support.v4.app.FragmentActivity;
import android.widget.ImageView;
import android.widget.TextView;

import com.handlerexploit.recoveryflasher.R;
import com.handlerexploit.recoveryflasher.models.Recovery;
import com.handlerexploit.recoveryflasher.utils.ImageManager;
import com.handlerexploit.recoveryflasher.utils.ImageManager.OnImageRecievedListener;

public class RecoveryActivity extends FragmentActivity {

    public static final String EXTRA_RECOVERY = "recovery";
    
    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_recovery);
        
        Bundle extras = getIntent().getExtras();
        Recovery recovery = (Recovery) extras.getSerializable(EXTRA_RECOVERY);
        
        TextView title = (TextView) findViewById(R.id.title);
        title.setText(recovery.getTitle().toUpperCase());
        
        TextView description = (TextView) findViewById(R.id.description);
        description.setText(recovery.getDescription());

        ImageManager.getInstance().get(recovery.getThumbnailIcon(), new OnImageRecievedListener() {
            public void onImageReceived(File file, Bitmap bitmap) {
                ImageView icon = (ImageView) findViewById(R.id.icon);
                icon.setImageBitmap(bitmap);
            }
        });
    }
}