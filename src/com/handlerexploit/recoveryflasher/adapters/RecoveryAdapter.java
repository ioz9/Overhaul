package com.handlerexploit.recoveryflasher.adapters;

import java.io.File;
import java.util.List;

import android.content.Context;
import android.graphics.Bitmap;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ArrayAdapter;
import android.widget.ImageView;
import android.widget.TextView;

import com.handlerexploit.recoveryflasher.R;
import com.handlerexploit.recoveryflasher.models.Recovery;
import com.handlerexploit.recoveryflasher.utils.ImageManager;
import com.handlerexploit.recoveryflasher.utils.ImageManager.OnImageRecievedListener;

public class RecoveryAdapter extends ArrayAdapter<Recovery> {

    public RecoveryAdapter(Context context, List<Recovery> objects) {
        super(context, 0, objects);
    }
    
    @Override
    public View getView(int position, View convertView, ViewGroup parent) {
        
        ViewHolder holder;
        if (convertView == null) {
            convertView = LayoutInflater.from(getContext()).inflate(R.layout.item_recovery, null);
            
            holder = new ViewHolder();
            holder.title = (TextView) convertView.findViewById(R.id.title);
            holder.description = (TextView) convertView.findViewById(R.id.description);
            holder.icon = (ImageView) convertView.findViewById(R.id.icon);
            
            convertView.setTag(holder);
        } else {
            holder = (ViewHolder) convertView.getTag();
        }
        
        Recovery recovery = getItem(position);

        holder.title.setText(recovery.getTitle());
        holder.description.setText(recovery.getDesc());
        
        holder.icon.setImageBitmap(null);
        holder.iconFile = recovery.getIcon();
        ImageManager.getInstance().get(holder.iconFile, holder);
        
        return convertView;
    }
    
    private class ViewHolder implements OnImageRecievedListener {
        
        TextView title;
        TextView description;
        ImageView icon;
        File iconFile;
        
        @Override
        public void onImageReceived(File file, Bitmap bitmap) {
            if (file.equals(iconFile) && bitmap != null) {
                icon.setImageBitmap(bitmap);
            }
        }
    }
}