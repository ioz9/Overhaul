/*
 *  Copyright (c) 2012 Daniel Huckaby
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package com.handlerexploit.recoveryflasher.fragments;

import java.util.List;

import android.app.Activity;
import android.content.Intent;
import android.os.AsyncTask;
import android.os.AsyncTask.Status;
import android.os.Bundle;
import android.support.v4.app.ListFragment;
import android.view.View;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;

import com.handlerexploit.recoveryflasher.activities.DevicesActivity.Device;
import com.handlerexploit.recoveryflasher.activities.RecoveryActivity;
import com.handlerexploit.recoveryflasher.adapters.RecoveryAdapter;
import com.handlerexploit.recoveryflasher.models.ExtendedDevice;
import com.handlerexploit.recoveryflasher.models.Recovery;
import com.handlerexploit.recoveryflasher.utils.Parser;

public class DeviceFragment extends ListFragment implements OnItemClickListener {
    
    public static final String EXTRA_DEVICE = "device";

    private AsyncTask<Object, Void, List<Recovery>> mInflaterTask;
    
    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        
        Parser parser = new Parser(getActivity());
        Device device = Device.valueOf(getArguments().getString(EXTRA_DEVICE));
        
        mInflaterTask = new InflaterTask().execute(parser, device);
    }
    
    @Override
    public void onDestroy() {
        if (mInflaterTask != null && mInflaterTask.getStatus() != Status.FINISHED) {
            mInflaterTask.cancel(true);
        }
        super.onDestroy();
    }
    
    @Override
    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
        Intent intent = new Intent(view.getContext(), RecoveryActivity.class);
        intent.putExtra(RecoveryActivity.EXTRA_RECOVERY, (Recovery) parent.getItemAtPosition(position));
        startActivity(intent);
    }
    
    private class InflaterTask extends AsyncTask<Object, Void, List<Recovery>> {

        @Override
        protected List<Recovery> doInBackground(Object... params) {
            Parser parser = (Parser) params[0];
            Device device = (Device) params[1];
            
            ExtendedDevice extendedDevice = parser.requestExtendedDevice(device);
            return extendedDevice.getRecoveries();
        }
        
        @Override
        public void onPostExecute(List<Recovery> results) {
            Activity activity = getActivity();
            if (activity != null && !activity.isFinishing()) {
                getListView().setOnItemClickListener(DeviceFragment.this);
                RecoveryAdapter recoveryAdapter = new RecoveryAdapter(activity, results);
                setListAdapter(recoveryAdapter);
            }
        }
    }
}