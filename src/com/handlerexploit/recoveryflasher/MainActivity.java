package com.handlerexploit.recoveryflasher;

import java.lang.reflect.Method;
import java.util.ArrayList;
import java.util.List;

import android.os.AsyncTask;
import android.os.Bundle;
import android.support.v4.app.FragmentActivity;
import android.support.v4.view.ViewPager;
import android.util.Log;
import android.view.View;

import com.handlerexploit.recoveryflasher.adapters.PagerAdapter;
import com.handlerexploit.recoveryflasher.fragments.ExtendedDeviceFragment;
import com.handlerexploit.recoveryflasher.models.ExtendedDevice;
import com.handlerexploit.recoveryflasher.utils.Parser;

public class MainActivity extends FragmentActivity {
    
    public static final String TAG = MainActivity.class.getSimpleName();

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.main);
        
        if (savedInstanceState == null) {
            Log.d(TAG, "Clean application launch");
        } else {
            Log.d(TAG, "Application relaunched from configuration change");
        }

        new NetworkOperationsTask().execute(new Parser(this));
    }
    
    public static enum Device {
        CLIQ("Motorola Cliq", "http://dl.dropbox.com/u/788286/com.adlx.recoveryflasher/motorola.mb200.json"),
        CLIQXT("Motorola CliqXT", "http://dl.dropbox.com/u/788286/com.adlx.recoveryflasher/motorola.mb501.json");

        private String name;
        private String url;

        Device(String name, String url) {
            this.name = name;
            this.url = url;
        }

        public String getName() {
            return name;
        }

        public String getUrl() {
            return url;
        }
    }
    
    private static void disableOverscrollMode(View view) {
        try {
            int OVER_SCROLL_NEVER = View.class.getField("OVER_SCROLL_NEVER").getInt(null);
            Method setOverScrollMode = View.class.getMethod("setOverScrollMode", new Class[] {Integer.TYPE});
            if (setOverScrollMode != null) {
                setOverScrollMode.invoke(view, OVER_SCROLL_NEVER);
            }
        } catch (Exception e) {
            Log.d(TAG, "Disabling overscroll failed", e);
        }
    }
    
    private class NetworkOperationsTask extends AsyncTask<Parser, Void, List<ExtendedDevice>> {

        @Override
        protected List<ExtendedDevice> doInBackground(Parser... params) {
            List<ExtendedDevice> extendedDevices = new ArrayList<ExtendedDevice>();
            for (Device device : Device.values()) {
                Log.d(TAG, "Requesting extended device information for " + device.getName());
                extendedDevices.add(params[0].requestExtendedDevice(device));
            }
            return extendedDevices;
        }
        
        @Override
        public void onPostExecute(List<ExtendedDevice> results) {
            ViewPager viewPager = (ViewPager) findViewById(R.id.viewPager);
            PagerAdapter pagerAdapter = new PagerAdapter(MainActivity.this);
            viewPager.setAdapter(pagerAdapter);
            
            for (ExtendedDevice extendedDevice : results) {
                Bundle bundle = new Bundle();
                bundle.putSerializable(ExtendedDeviceFragment.EXTRA_DEVICE, extendedDevice);
                pagerAdapter.add(ExtendedDeviceFragment.class, bundle);
                Log.d(TAG, "Extended device " + extendedDevice.getName() + " added to PagerAdapter, it contains " + extendedDevice.getRecoveries().size() + " recoveries");
            }

            disableOverscrollMode(viewPager);
            Log.d(TAG, "ViewPager fully initialized");
        }
    }
}